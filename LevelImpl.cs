//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
namespace AssemblyCSharp
{
	[Serializable]
	public class LevelImpl : Level
	{
		private int level;
		private int numberOfQuestions;
		private int numberOfQuestionsCompleted;
		private int numberAnsweredCorrectly;

		private List<Question> unansweredQuestions;
		private List<AnsweredQuestion> answeredQuestions;

		public LevelImpl (int level, List<Question> unansweredQuestions, int numberOfQuestions)
		{
			this.level = level;
			this.unansweredQuestions = unansweredQuestions;
			this.numberOfQuestions = numberOfQuestions;
			numberOfQuestionsCompleted = 0;
			numberAnsweredCorrectly = 0;
			answeredQuestions = new List<AnsweredQuestion> ();
		}

		public void questionCompleted(Question question, List<float> givenAnswer, bool isCorrect) {
			AnsweredQuestion myAnswer = new AnsweredQuestionImpl (question, givenAnswer, isCorrect);
			answeredQuestions.Add (myAnswer);
			this.updateNumberCompleted ();
			if (isCorrect) this.updateNumberAnsweredCorrectly ();
			if (unansweredQuestions.Count>0) unansweredQuestions.Remove (question);
		}

		private void updateNumberCompleted() {
			numberOfQuestionsCompleted++;
		}

		public void reset() {
			unansweredQuestions.Clear ();
			//answeredQuestions.ForEach(delegate(AnsweredQuestion myQuestion) { unansweredQuestions.Add (myQuestion.getQuestion()); } );

			foreach (AnsweredQuestion myQuestion in answeredQuestions) // Loop through List with foreach
			{
				unansweredQuestions.Add (myQuestion.getQuestion());
			}

			answeredQuestions.Clear ();
			numberOfQuestionsCompleted = 0;
			numberAnsweredCorrectly = 0;
		}

		private void updateNumberAnsweredCorrectly() {
			numberAnsweredCorrectly++;
		}

		public int getLevel() {
			return this.level;
		}

		public int getnumberOfQuestions() {
			return this.numberOfQuestions;
		}

		public int getnumberOfQuestionsCompleted() {
			return this.numberOfQuestionsCompleted;
		}

		public int getnumberAnswerCorrectly() {
			return this.numberAnsweredCorrectly;
		}

		public List<Question> getUnansweredQuestions() {
			return unansweredQuestions;
		}

		public Question getNextUnansweredQuestion() {
			if (unansweredQuestions.Count > 0)
				return unansweredQuestions [0];
			return null;
		}

		public List<AnsweredQuestion> getAnsweredQuestions() {
			return answeredQuestions;
		}
	}
}

